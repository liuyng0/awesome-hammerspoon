[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "name" : "max_items",
        "stripped_doc" : [
          "How many items should be created on aria2 panel? Defaults to 5."
        ],
        "doc" : "How many items should be created on aria2 panel? Defaults to 5.",
        "def" : "HSaria2.max_items",
        "notes" : [

        ],
        "signature" : "HSaria2.max_items",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "How many items should be created on aria2 panel? Defaults to 5.",
        "parameters" : [

        ]
      },
      {
        "name" : "refresh_interval",
        "stripped_doc" : [
          "How often should HSaria2 retrieve data from RPC server? Defaults to 1 (second)."
        ],
        "doc" : "How often should HSaria2 retrieve data from RPC server? Defaults to 1 (second).",
        "def" : "HSaria2.refresh_interval",
        "notes" : [

        ],
        "signature" : "HSaria2.refresh_interval",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "How often should HSaria2 retrieve data from RPC server? Defaults to 1 (second).",
        "parameters" : [

        ]
      }
    ],
    "stripped_doc" : [

    ],
    "desc" : "Communicate with [aria2](https:\/\/github.com\/aria2\/aria2), an interactive panel included.",
    "Deprecated" : [

    ],
    "type" : "Module",
    "Constructor" : [

    ],
    "doc" : "Communicate with [aria2](https:\/\/github.com\/aria2\/aria2), an interactive panel included.\n\nDownload: [https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/HSaria2.spoon.zip](https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/HSaria2.spoon.zip)",
    "Method" : [
      {
        "name" : "connectToHost",
        "stripped_doc" : [
          "Try connect to `hostaddr` with `secret`. If succeed, they will become default values for following-up oprations.",
          ""
        ],
        "doc" : "Try connect to `hostaddr` with `secret`. If succeed, they will become default values for following-up oprations.\n\nParameters:\n * hostaddr - A sring specifying aria2 RPC host, including host name and port address. e.g. \"http:\/\/localhost:6800\/jsonrpc\".\n * secret - A string specifying host secret",
        "def" : "HSaria2:connectToHost(hostaddr, secret)",
        "notes" : [

        ],
        "signature" : "HSaria2:connectToHost(hostaddr, secret)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Try connect to `hostaddr` with `secret`. If succeed, they will become default values for following-up oprations.",
        "parameters" : [
          " * hostaddr - A sring specifying aria2 RPC host, including host name and port address. e.g. \"http:\/\/localhost:6800\/jsonrpc\".",
          " * secret - A string specifying host secret"
        ]
      },
      {
        "name" : "newTask",
        "stripped_doc" : [
          "Create new regular\/bt\/metalink task, and send notification when done.",
          ""
        ],
        "doc" : "Create new regular\/bt\/metalink task, and send notification when done.\n\nParameters:\n * tasktype - A string specifying task type. The value is one of these: `addUri`, `addTorrent`, `addMetalink`, `nil`. When tasktype is `nil`, aria2 will create a regular download task.\n * urls - A string or a table specifying URL. Multi URLs (table) are only available when tasktype is `addUri` or `nil`.\n * hostaddr - A optional sring specifying aria2 RPC host\n * secret - A optional string specifying host secret",
        "def" : "HSaria2:newTask(tasktype, urls, hostaddr, secret)",
        "notes" : [

        ],
        "signature" : "HSaria2:newTask(tasktype, urls, hostaddr, secret)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Create new regular\/bt\/metalink task, and send notification when done.",
        "parameters" : [
          " * tasktype - A string specifying task type. The value is one of these: `addUri`, `addTorrent`, `addMetalink`, `nil`. When tasktype is `nil`, aria2 will create a regular download task.",
          " * urls - A string or a table specifying URL. Multi URLs (table) are only available when tasktype is `addUri` or `nil`.",
          " * hostaddr - A optional sring specifying aria2 RPC host",
          " * secret - A optional string specifying host secret"
        ]
      },
      {
        "name" : "sendCommand",
        "stripped_doc" : [
          "Send a command to `hostaddr`, only limited commands are supported.",
          ""
        ],
        "doc" : "Send a command to `hostaddr`, only limited commands are supported.\n\nParameters:\n * command - A string specifying sending command. The value is one of these: `remove`, `forceRemove`, `pause`, `pauseAll`, `forcePause`, `forcePauseAll`, `unpause`, `unpauseAll`, `purgeDownloadResult`, `removeDownloadResult`.\n * gid - A string specifying GID (aria2 identifies each download by the ID called GID). This Parameter can be optional or not according to the value of `command`.\n * hostaddr - A optional sring specifying aria2 RPC host\n * secret - A optional string specifying host secret",
        "def" : "HSaria2:sendCommand(command, gid, hostaddr, secret)",
        "notes" : [

        ],
        "signature" : "HSaria2:sendCommand(command, gid, hostaddr, secret)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Send a command to `hostaddr`, only limited commands are supported.",
        "parameters" : [
          " * command - A string specifying sending command. The value is one of these: `remove`, `forceRemove`, `pause`, `pauseAll`, `forcePause`, `forcePauseAll`, `unpause`, `unpauseAll`, `purgeDownloadResult`, `removeDownloadResult`.",
          " * gid - A string specifying GID (aria2 identifies each download by the ID called GID). This Parameter can be optional or not according to the value of `command`.",
          " * hostaddr - A optional sring specifying aria2 RPC host",
          " * secret - A optional string specifying host secret"
        ]
      },
      {
        "name" : "togglePanel",
        "stripped_doc" : [
          "Toggle the display of aria2 panel. The panel allows users to interact with aria2, add new tasks, pause them, or remove, purge … etc."
        ],
        "doc" : "Toggle the display of aria2 panel. The panel allows users to interact with aria2, add new tasks, pause them, or remove, purge … etc.",
        "def" : "HSaria2:togglePanel()",
        "notes" : [

        ],
        "signature" : "HSaria2:togglePanel()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Toggle the display of aria2 panel. The panel allows users to interact with aria2, add new tasks, pause them, or remove, purge … etc.",
        "parameters" : [

        ]
      }
    ],
    "Command" : [

    ],
    "Field" : [

    ],
    "items" : [
      {
        "name" : "max_items",
        "stripped_doc" : [
          "How many items should be created on aria2 panel? Defaults to 5."
        ],
        "doc" : "How many items should be created on aria2 panel? Defaults to 5.",
        "def" : "HSaria2.max_items",
        "notes" : [

        ],
        "signature" : "HSaria2.max_items",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "How many items should be created on aria2 panel? Defaults to 5.",
        "parameters" : [

        ]
      },
      {
        "name" : "refresh_interval",
        "stripped_doc" : [
          "How often should HSaria2 retrieve data from RPC server? Defaults to 1 (second)."
        ],
        "doc" : "How often should HSaria2 retrieve data from RPC server? Defaults to 1 (second).",
        "def" : "HSaria2.refresh_interval",
        "notes" : [

        ],
        "signature" : "HSaria2.refresh_interval",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "How often should HSaria2 retrieve data from RPC server? Defaults to 1 (second).",
        "parameters" : [

        ]
      },
      {
        "name" : "connectToHost",
        "stripped_doc" : [
          "Try connect to `hostaddr` with `secret`. If succeed, they will become default values for following-up oprations.",
          ""
        ],
        "doc" : "Try connect to `hostaddr` with `secret`. If succeed, they will become default values for following-up oprations.\n\nParameters:\n * hostaddr - A sring specifying aria2 RPC host, including host name and port address. e.g. \"http:\/\/localhost:6800\/jsonrpc\".\n * secret - A string specifying host secret",
        "def" : "HSaria2:connectToHost(hostaddr, secret)",
        "notes" : [

        ],
        "signature" : "HSaria2:connectToHost(hostaddr, secret)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Try connect to `hostaddr` with `secret`. If succeed, they will become default values for following-up oprations.",
        "parameters" : [
          " * hostaddr - A sring specifying aria2 RPC host, including host name and port address. e.g. \"http:\/\/localhost:6800\/jsonrpc\".",
          " * secret - A string specifying host secret"
        ]
      },
      {
        "name" : "newTask",
        "stripped_doc" : [
          "Create new regular\/bt\/metalink task, and send notification when done.",
          ""
        ],
        "doc" : "Create new regular\/bt\/metalink task, and send notification when done.\n\nParameters:\n * tasktype - A string specifying task type. The value is one of these: `addUri`, `addTorrent`, `addMetalink`, `nil`. When tasktype is `nil`, aria2 will create a regular download task.\n * urls - A string or a table specifying URL. Multi URLs (table) are only available when tasktype is `addUri` or `nil`.\n * hostaddr - A optional sring specifying aria2 RPC host\n * secret - A optional string specifying host secret",
        "def" : "HSaria2:newTask(tasktype, urls, hostaddr, secret)",
        "notes" : [

        ],
        "signature" : "HSaria2:newTask(tasktype, urls, hostaddr, secret)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Create new regular\/bt\/metalink task, and send notification when done.",
        "parameters" : [
          " * tasktype - A string specifying task type. The value is one of these: `addUri`, `addTorrent`, `addMetalink`, `nil`. When tasktype is `nil`, aria2 will create a regular download task.",
          " * urls - A string or a table specifying URL. Multi URLs (table) are only available when tasktype is `addUri` or `nil`.",
          " * hostaddr - A optional sring specifying aria2 RPC host",
          " * secret - A optional string specifying host secret"
        ]
      },
      {
        "name" : "sendCommand",
        "stripped_doc" : [
          "Send a command to `hostaddr`, only limited commands are supported.",
          ""
        ],
        "doc" : "Send a command to `hostaddr`, only limited commands are supported.\n\nParameters:\n * command - A string specifying sending command. The value is one of these: `remove`, `forceRemove`, `pause`, `pauseAll`, `forcePause`, `forcePauseAll`, `unpause`, `unpauseAll`, `purgeDownloadResult`, `removeDownloadResult`.\n * gid - A string specifying GID (aria2 identifies each download by the ID called GID). This Parameter can be optional or not according to the value of `command`.\n * hostaddr - A optional sring specifying aria2 RPC host\n * secret - A optional string specifying host secret",
        "def" : "HSaria2:sendCommand(command, gid, hostaddr, secret)",
        "notes" : [

        ],
        "signature" : "HSaria2:sendCommand(command, gid, hostaddr, secret)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Send a command to `hostaddr`, only limited commands are supported.",
        "parameters" : [
          " * command - A string specifying sending command. The value is one of these: `remove`, `forceRemove`, `pause`, `pauseAll`, `forcePause`, `forcePauseAll`, `unpause`, `unpauseAll`, `purgeDownloadResult`, `removeDownloadResult`.",
          " * gid - A string specifying GID (aria2 identifies each download by the ID called GID). This Parameter can be optional or not according to the value of `command`.",
          " * hostaddr - A optional sring specifying aria2 RPC host",
          " * secret - A optional string specifying host secret"
        ]
      },
      {
        "name" : "togglePanel",
        "stripped_doc" : [
          "Toggle the display of aria2 panel. The panel allows users to interact with aria2, add new tasks, pause them, or remove, purge … etc."
        ],
        "doc" : "Toggle the display of aria2 panel. The panel allows users to interact with aria2, add new tasks, pause them, or remove, purge … etc.",
        "def" : "HSaria2:togglePanel()",
        "notes" : [

        ],
        "signature" : "HSaria2:togglePanel()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Toggle the display of aria2 panel. The panel allows users to interact with aria2, add new tasks, pause them, or remove, purge … etc.",
        "parameters" : [

        ]
      }
    ],
    "name" : "HSaria2"
  }
]
