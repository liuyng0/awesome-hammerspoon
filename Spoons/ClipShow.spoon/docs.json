[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [

    ],
    "stripped_doc" : [

    ],
    "desc" : "Show the content of system clipboard",
    "Deprecated" : [

    ],
    "type" : "Module",
    "Constructor" : [

    ],
    "doc" : "Show the content of system clipboard\n\nDownload: [https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/ClipShow.spoon.zip](https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/ClipShow.spoon.zip)",
    "Method" : [
      {
        "name" : "toggleShow",
        "stripped_doc" : [
          "Process the content of system clipboard and show\/hide the canvas"
        ],
        "doc" : "Process the content of system clipboard and show\/hide the canvas",
        "def" : "ClipShow:toggleShow()",
        "notes" : [

        ],
        "signature" : "ClipShow:toggleShow()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Process the content of system clipboard and show\/hide the canvas",
        "parameters" : [

        ]
      },
      {
        "name" : "openInBrowserWithRef",
        "stripped_doc" : [
          "Open content of the clipboard in default browser with specific refstr.",
          ""
        ],
        "doc" : "Open content of the clipboard in default browser with specific refstr.\n\nParameters:\n * refstr - A optional string specifying which refstr to use. If nil, then open this content in browser directly. The \"refstr\" could be something like this: `https:\/\/www.bing.com\/search?q=`.",
        "def" : "ClipShow:openInBrowserWithRef(refstr)",
        "notes" : [

        ],
        "signature" : "ClipShow:openInBrowserWithRef(refstr)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Open content of the clipboard in default browser with specific refstr.",
        "parameters" : [
          " * refstr - A optional string specifying which refstr to use. If nil, then open this content in browser directly. The \"refstr\" could be something like this: `https:\/\/www.bing.com\/search?q=`."
        ]
      },
      {
        "name" : "saveToSession",
        "stripped_doc" : [
          "Save clipboard session so we can restore it later"
        ],
        "doc" : "Save clipboard session so we can restore it later",
        "def" : "ClipShow:saveToSession()",
        "notes" : [

        ],
        "signature" : "ClipShow:saveToSession()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Save clipboard session so we can restore it later",
        "parameters" : [

        ]
      },
      {
        "name" : "restoreLastSession",
        "stripped_doc" : [
          "Restore the lastsession of system clipboard"
        ],
        "doc" : "Restore the lastsession of system clipboard",
        "def" : "ClipShow:restoreLastSession()",
        "notes" : [

        ],
        "signature" : "ClipShow:restoreLastSession()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Restore the lastsession of system clipboard",
        "parameters" : [

        ]
      },
      {
        "name" : "saveToFile",
        "stripped_doc" : [
          "Save content of current canvas to a file, the default location is `~\/Desktop\/`."
        ],
        "doc" : "Save content of current canvas to a file, the default location is `~\/Desktop\/`.",
        "def" : "ClipShow:saveToFile()",
        "notes" : [

        ],
        "signature" : "ClipShow:saveToFile()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Save content of current canvas to a file, the default location is `~\/Desktop\/`.",
        "parameters" : [

        ]
      },
      {
        "name" : "openWithCommand",
        "stripped_doc" : [
          "Open local file with specific command.",
          ""
        ],
        "doc" : "Open local file with specific command.\n\nParameters:\n * command - A string specifying which command to use. The \"command\" is something like this: `\/usr\/local\/bin\/mvim`.",
        "def" : "ClipShow:openWithCommand(command)",
        "notes" : [

        ],
        "signature" : "ClipShow:openWithCommand(command)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Open local file with specific command.",
        "parameters" : [
          " * command - A string specifying which command to use. The \"command\" is something like this: `\/usr\/local\/bin\/mvim`."
        ]
      }
    ],
    "Command" : [

    ],
    "Field" : [

    ],
    "items" : [
      {
        "name" : "openInBrowserWithRef",
        "stripped_doc" : [
          "Open content of the clipboard in default browser with specific refstr.",
          ""
        ],
        "doc" : "Open content of the clipboard in default browser with specific refstr.\n\nParameters:\n * refstr - A optional string specifying which refstr to use. If nil, then open this content in browser directly. The \"refstr\" could be something like this: `https:\/\/www.bing.com\/search?q=`.",
        "def" : "ClipShow:openInBrowserWithRef(refstr)",
        "notes" : [

        ],
        "signature" : "ClipShow:openInBrowserWithRef(refstr)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Open content of the clipboard in default browser with specific refstr.",
        "parameters" : [
          " * refstr - A optional string specifying which refstr to use. If nil, then open this content in browser directly. The \"refstr\" could be something like this: `https:\/\/www.bing.com\/search?q=`."
        ]
      },
      {
        "name" : "openWithCommand",
        "stripped_doc" : [
          "Open local file with specific command.",
          ""
        ],
        "doc" : "Open local file with specific command.\n\nParameters:\n * command - A string specifying which command to use. The \"command\" is something like this: `\/usr\/local\/bin\/mvim`.",
        "def" : "ClipShow:openWithCommand(command)",
        "notes" : [

        ],
        "signature" : "ClipShow:openWithCommand(command)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Open local file with specific command.",
        "parameters" : [
          " * command - A string specifying which command to use. The \"command\" is something like this: `\/usr\/local\/bin\/mvim`."
        ]
      },
      {
        "name" : "restoreLastSession",
        "stripped_doc" : [
          "Restore the lastsession of system clipboard"
        ],
        "doc" : "Restore the lastsession of system clipboard",
        "def" : "ClipShow:restoreLastSession()",
        "notes" : [

        ],
        "signature" : "ClipShow:restoreLastSession()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Restore the lastsession of system clipboard",
        "parameters" : [

        ]
      },
      {
        "name" : "saveToFile",
        "stripped_doc" : [
          "Save content of current canvas to a file, the default location is `~\/Desktop\/`."
        ],
        "doc" : "Save content of current canvas to a file, the default location is `~\/Desktop\/`.",
        "def" : "ClipShow:saveToFile()",
        "notes" : [

        ],
        "signature" : "ClipShow:saveToFile()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Save content of current canvas to a file, the default location is `~\/Desktop\/`.",
        "parameters" : [

        ]
      },
      {
        "name" : "saveToSession",
        "stripped_doc" : [
          "Save clipboard session so we can restore it later"
        ],
        "doc" : "Save clipboard session so we can restore it later",
        "def" : "ClipShow:saveToSession()",
        "notes" : [

        ],
        "signature" : "ClipShow:saveToSession()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Save clipboard session so we can restore it later",
        "parameters" : [

        ]
      },
      {
        "name" : "toggleShow",
        "stripped_doc" : [
          "Process the content of system clipboard and show\/hide the canvas"
        ],
        "doc" : "Process the content of system clipboard and show\/hide the canvas",
        "def" : "ClipShow:toggleShow()",
        "notes" : [

        ],
        "signature" : "ClipShow:toggleShow()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Process the content of system clipboard and show\/hide the canvas",
        "parameters" : [

        ]
      }
    ],
    "name" : "ClipShow"
  }
]
