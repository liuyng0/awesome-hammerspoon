[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "name" : "gridparts",
        "stripped_doc" : [
          "An integer specifying how many gridparts the screen should be divided into. Defaults to 30."
        ],
        "doc" : "An integer specifying how many gridparts the screen should be divided into. Defaults to 30.",
        "def" : "WinWin.gridparts",
        "notes" : [

        ],
        "signature" : "WinWin.gridparts",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "An integer specifying how many gridparts the screen should be divided into. Defaults to 30.",
        "parameters" : [

        ]
      }
    ],
    "stripped_doc" : [

    ],
    "desc" : "Windows manipulation",
    "Deprecated" : [

    ],
    "type" : "Module",
    "Constructor" : [

    ],
    "doc" : "Windows manipulation\n\nDownload: [https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/WinWin.spoon.zip](https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/WinWin.spoon.zip)",
    "Method" : [
      {
        "name" : "stepMove",
        "stripped_doc" : [
          "Move the focused window in the `direction` by on step. The step scale equals to the width\/height of one gridpart.",
          ""
        ],
        "doc" : "Move the focused window in the `direction` by on step. The step scale equals to the width\/height of one gridpart.\n\nParameters:\n * direction - A string specifying the direction, valid strings are: `left`, `right`, `up`, `down`.",
        "def" : "WinWin:stepMove(direction)",
        "notes" : [

        ],
        "signature" : "WinWin:stepMove(direction)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Move the focused window in the `direction` by on step. The step scale equals to the width\/height of one gridpart.",
        "parameters" : [
          " * direction - A string specifying the direction, valid strings are: `left`, `right`, `up`, `down`."
        ]
      },
      {
        "name" : "stepResize",
        "stripped_doc" : [
          "Resize the focused window in the `direction` by on step.",
          ""
        ],
        "doc" : "Resize the focused window in the `direction` by on step.\n\nParameters:\n * direction - A string specifying the direction, valid strings are: `left`, `right`, `up`, `down`.",
        "def" : "WinWin:stepResize(direction)",
        "notes" : [

        ],
        "signature" : "WinWin:stepResize(direction)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Resize the focused window in the `direction` by on step.",
        "parameters" : [
          " * direction - A string specifying the direction, valid strings are: `left`, `right`, `up`, `down`."
        ]
      },
      {
        "name" : "moveAndResize",
        "stripped_doc" : [
          "Move and resize the focused window.",
          ""
        ],
        "doc" : "Move and resize the focused window.\n\nParameters:\n * option - A string specifying the option, valid strings are: `halfleft`, `halfright`, `halfup`, `halfdown`, `cornerNW`, `cornerSW`, `cornerNE`, `cornerSE`, `center`, `fullscreen`, `maximize`, `minimize`, `expand`, `shrink`.",
        "def" : "WinWin:moveAndResize(option)",
        "notes" : [

        ],
        "signature" : "WinWin:moveAndResize(option)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Move and resize the focused window.",
        "parameters" : [
          " * option - A string specifying the option, valid strings are: `halfleft`, `halfright`, `halfup`, `halfdown`, `cornerNW`, `cornerSW`, `cornerNE`, `cornerSE`, `center`, `fullscreen`, `maximize`, `minimize`, `expand`, `shrink`."
        ]
      },
      {
        "name" : "moveToScreen",
        "stripped_doc" : [
          "Move the focused window between all of the screens in the `direction`.",
          ""
        ],
        "doc" : "Move the focused window between all of the screens in the `direction`.\n\nParameters:\n * direction - A string specifying the direction, valid strings are: `left`, `right`, `up`, `down`, `next`.",
        "def" : "WinWin:moveToScreen(direction)",
        "notes" : [

        ],
        "signature" : "WinWin:moveToScreen(direction)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Move the focused window between all of the screens in the `direction`.",
        "parameters" : [
          " * direction - A string specifying the direction, valid strings are: `left`, `right`, `up`, `down`, `next`."
        ]
      },
      {
        "name" : "undo",
        "stripped_doc" : [
          "Undo the last window manipulation. Only those \"moveAndResize\" manipulations can be undone.",
          ""
        ],
        "doc" : "Undo the last window manipulation. Only those \"moveAndResize\" manipulations can be undone.\n\nParameters:\n * None",
        "def" : "WinWin:undo()",
        "notes" : [

        ],
        "signature" : "WinWin:undo()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Undo the last window manipulation. Only those \"moveAndResize\" manipulations can be undone.",
        "parameters" : [
          " * None"
        ]
      },
      {
        "name" : "centerCursor",
        "stripped_doc" : [
          "Center the cursor on the focused window.",
          ""
        ],
        "doc" : "Center the cursor on the focused window.\n\nParameters:\n * None",
        "def" : "WinWin:centerCursor()",
        "notes" : [

        ],
        "signature" : "WinWin:centerCursor()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Center the cursor on the focused window.",
        "parameters" : [
          " * None"
        ]
      }
    ],
    "Command" : [

    ],
    "Field" : [

    ],
    "items" : [
      {
        "name" : "gridparts",
        "stripped_doc" : [
          "An integer specifying how many gridparts the screen should be divided into. Defaults to 30."
        ],
        "doc" : "An integer specifying how many gridparts the screen should be divided into. Defaults to 30.",
        "def" : "WinWin.gridparts",
        "notes" : [

        ],
        "signature" : "WinWin.gridparts",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "An integer specifying how many gridparts the screen should be divided into. Defaults to 30.",
        "parameters" : [

        ]
      },
      {
        "name" : "centerCursor",
        "stripped_doc" : [
          "Center the cursor on the focused window.",
          ""
        ],
        "doc" : "Center the cursor on the focused window.\n\nParameters:\n * None",
        "def" : "WinWin:centerCursor()",
        "notes" : [

        ],
        "signature" : "WinWin:centerCursor()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Center the cursor on the focused window.",
        "parameters" : [
          " * None"
        ]
      },
      {
        "name" : "moveAndResize",
        "stripped_doc" : [
          "Move and resize the focused window.",
          ""
        ],
        "doc" : "Move and resize the focused window.\n\nParameters:\n * option - A string specifying the option, valid strings are: `halfleft`, `halfright`, `halfup`, `halfdown`, `cornerNW`, `cornerSW`, `cornerNE`, `cornerSE`, `center`, `fullscreen`, `maximize`, `minimize`, `expand`, `shrink`.",
        "def" : "WinWin:moveAndResize(option)",
        "notes" : [

        ],
        "signature" : "WinWin:moveAndResize(option)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Move and resize the focused window.",
        "parameters" : [
          " * option - A string specifying the option, valid strings are: `halfleft`, `halfright`, `halfup`, `halfdown`, `cornerNW`, `cornerSW`, `cornerNE`, `cornerSE`, `center`, `fullscreen`, `maximize`, `minimize`, `expand`, `shrink`."
        ]
      },
      {
        "name" : "moveToScreen",
        "stripped_doc" : [
          "Move the focused window between all of the screens in the `direction`.",
          ""
        ],
        "doc" : "Move the focused window between all of the screens in the `direction`.\n\nParameters:\n * direction - A string specifying the direction, valid strings are: `left`, `right`, `up`, `down`, `next`.",
        "def" : "WinWin:moveToScreen(direction)",
        "notes" : [

        ],
        "signature" : "WinWin:moveToScreen(direction)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Move the focused window between all of the screens in the `direction`.",
        "parameters" : [
          " * direction - A string specifying the direction, valid strings are: `left`, `right`, `up`, `down`, `next`."
        ]
      },
      {
        "name" : "stepMove",
        "stripped_doc" : [
          "Move the focused window in the `direction` by on step. The step scale equals to the width\/height of one gridpart.",
          ""
        ],
        "doc" : "Move the focused window in the `direction` by on step. The step scale equals to the width\/height of one gridpart.\n\nParameters:\n * direction - A string specifying the direction, valid strings are: `left`, `right`, `up`, `down`.",
        "def" : "WinWin:stepMove(direction)",
        "notes" : [

        ],
        "signature" : "WinWin:stepMove(direction)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Move the focused window in the `direction` by on step. The step scale equals to the width\/height of one gridpart.",
        "parameters" : [
          " * direction - A string specifying the direction, valid strings are: `left`, `right`, `up`, `down`."
        ]
      },
      {
        "name" : "stepResize",
        "stripped_doc" : [
          "Resize the focused window in the `direction` by on step.",
          ""
        ],
        "doc" : "Resize the focused window in the `direction` by on step.\n\nParameters:\n * direction - A string specifying the direction, valid strings are: `left`, `right`, `up`, `down`.",
        "def" : "WinWin:stepResize(direction)",
        "notes" : [

        ],
        "signature" : "WinWin:stepResize(direction)",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Resize the focused window in the `direction` by on step.",
        "parameters" : [
          " * direction - A string specifying the direction, valid strings are: `left`, `right`, `up`, `down`."
        ]
      },
      {
        "name" : "undo",
        "stripped_doc" : [
          "Undo the last window manipulation. Only those \"moveAndResize\" manipulations can be undone.",
          ""
        ],
        "doc" : "Undo the last window manipulation. Only those \"moveAndResize\" manipulations can be undone.\n\nParameters:\n * None",
        "def" : "WinWin:undo()",
        "notes" : [

        ],
        "signature" : "WinWin:undo()",
        "type" : "Method",
        "returns" : [

        ],
        "desc" : "Undo the last window manipulation. Only those \"moveAndResize\" manipulations can be undone.",
        "parameters" : [
          " * None"
        ]
      }
    ],
    "name" : "WinWin"
  }
]
