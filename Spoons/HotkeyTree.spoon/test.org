#+title: Test

* Test
** _concatKey
#+name: _concatKey 
#+begin_src lua :exports none
local M = hs.loadSpoon("HotkeyTree")
print(hs.inspect(M:_concatKey("a")))
print(hs.inspect(M:_concatKey({"control", "a"})))
print(hs.inspect(M:_concatKey({"option", "control", "a"})))
#+end_src

#+begin_src sh :noweb-prefix no :noweb yes :results output
echo "test _concatKey"
hs -c '<<_concatKey>>'
#+end_src

#+RESULTS:
: test _concatKey
: -- Spoon already loaded, returning existing copy: HotkeyTree
: "a"
: "control-a"
: "control-option-a"
** _splitKey
#+name: _splitKey
#+begin_src lua :exports none
local M = hs.loadSpoon("HotkeyTree")
print(hs.inspect(M:_splitKey("a")))
print(hs.inspect(M:_splitKey("control-ab")))
print(hs.inspect(M:_splitKey("option-control-a")))
#+end_src

#+begin_src sh :noweb-prefix no :noweb yes :results output
echo "test _splitKey"
hs -c '<<_splitKey>>'
#+end_src

#+RESULTS:
: test _splitKey
: -- Loading Spoon: HotkeyTree
: { "", "a" }
: { { "control" }, "ab" }
: { { "control", "option" }, "a" }
** addBinding
#+name: addBinding
#+begin_src lua
local M = hs.loadSpoon("HotkeyTree")
M:addBinding({"a", {"control", "a"}, {"control", "option", "a"}}, "complex", function () print("complex") end)
M:addBinding({"b"}, "simple", function () print("simple") end)
print(hs.inspect(M.tree))
#+end_src

#+begin_src sh :noweb-prefix no :noweb yes :results output
echo "test addBinding"
hs -c '<<addBinding>>'
#+end_src

#+RESULTS:
#+begin_example
test addBinding
-- Loading Spoon: HotkeyTree
{
  a = {
    description = "+prefix",
    mapping = {
      ["control-a"] = {
        description = "+prefix",
        mapping = {
          ["control-option-a"] = {
            description = "complex",
            mapping = <function 1>
          }
        }
      }
    }
  },
  b = {
    description = "simple",
    mapping = <function 2>
  }
}
#+end_example

** addMapping
#+name: addMapping
#+begin_src lua
local M = hs.loadSpoon("HotkeyTree")
M:addMapping({"a", "c"}, "prefix mapping for a-c", {
    {key={"b"}, func=function() print("a-c-b") end, description="a-c-b-func"},
    {key={{"control", "c"}}, func=function() print("a-c-C_c") end, description="a-c-C_c-func"}
})
print(hs.inspect(M.tree))
#+end_src


#+begin_src sh :noweb-prefix no :noweb yes :results output
echo "test addMapping"
hs -c '<<addMapping>>'
#+end_src

#+RESULTS:
#+begin_example
test addMapping
-- Spoon already loaded, returning existing copy: HotkeyTree
16:21:04 ** Warning:HotkeyTree: table: 0x600000c6ec80 Duplicated binding { "a", "c" }
16:21:04 ** Warning:HotkeyTree: table: 0x600000c6ec80 Duplciated prefix { "a", "c", "b" }
16:21:04 ** Warning:HotkeyTree: table: 0x600000c6ec80 Duplciated prefix { "a", "c", "control-c" }
{
  a = {
    description = "+prefix",
    mapping = {
      c = {
        description = "prefix mapping for a-c",
        mapping = {
          b = {
            description = "a-c-b-func",
            mapping = <function 1>
          },
          ["control-c"] = {
            description = "a-c-C_c-func",
            mapping = <function 2>
          }
        }
      }
    }
  }
}
#+end_example


** initModals
#+name: initModals 
#+begin_src lua
local M = hs.loadSpoon("HotkeyTree")
M:addMapping({"a", "c"}, "prefix mapping for a-c", {
    {key={"b"}, func=function() print("a-c-b") end, description="a-c-b-func"},
    {key={{"control", "c"}}, func=function() print("a-c-C_c") end, description="a-c-C_c-func"}
})
M:initModals()
spoon.ModalMgr:activate({"/"}, "#FF6347", true)
#+end_src


#+begin_src sh :noweb-prefix no :noweb yes :results output
echo "test initModals"
hs -c '<<initModals>>'
#+end_src

#+RESULTS:
: test initModals
: -- Spoon already loaded, returning existing copy: HotkeyTree
: 16:24:51 ** Warning:HotkeyTree: table: 0x600000c6ec80 Duplicated binding { "a", "c" }
: 16:24:51 ** Warning:HotkeyTree: table: 0x600000c6ec80 Duplciated prefix { "a", "c", "b" }
: 16:24:51 ** Warning:HotkeyTree: table: 0x600000c6ec80 Duplciated prefix { "a", "c", "control-c" }
:              hotkey: Disabled previous hotkey A: +prefix
:              hotkey: Disabled previous hotkey A: +prefix
:              hotkey: Disabled previous hotkey A: +prefix
